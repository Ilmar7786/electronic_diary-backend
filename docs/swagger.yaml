definitions:
  api.ParseErrorType:
    additionalProperties:
      type: string
    type: object
  api.ResponseError:
    properties:
      errors:
        items:
          $ref: '#/definitions/api.ParseErrorType'
        type: array
    type: object
  dto.CreateRoleDTO:
    properties:
      key:
        description: '@required Обязательное поле'
        type: string
      name:
        description: '@required Обязательное поле'
        type: string
    type: object
  dto.CreateUserDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  dto.UpdateRoleDTO:
    properties:
      key:
        type: string
      name:
        type: string
    type: object
  dto.UpdateUserDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  role.Model:
    properties:
      createdAt:
        type: string
      id:
        type: string
      key:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  user.Model:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      isEmail:
        type: boolean
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /roles:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/role.Model'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ResponseError'
      summary: Список
      tags:
      - Роль
    post:
      consumes:
      - application/json
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRoleDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/role.Model'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ResponseError'
      summary: Создать
      tags:
      - Роль
  /roles/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID роли
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: bool
        "400":
          description: Bad Request
          schema:
            type: bool
      summary: Удалить
      tags:
      - Роль
    get:
      consumes:
      - application/json
      parameters:
      - description: ID роли
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/role.Model'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ResponseError'
      summary: Получить одну роль
      tags:
      - Роль
    put:
      consumes:
      - application/json
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRoleDTO'
      - description: ID роли
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: bool
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ResponseError'
      summary: Обновить
      tags:
      - Роль
  /roles/{user_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID пользователя
        in: path
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: bool
        "400":
          description: Bad Request
          schema:
            type: bool
      summary: Удалить
      tags:
      - Пользователь
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.Model'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ResponseError'
      summary: Список пользователей
      tags:
      - Пользователь
    post:
      consumes:
      - application/json
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Model'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ResponseError'
      summary: Создать
      tags:
      - Пользователь
  /users/{user_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID роли
        in: path
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Model'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ResponseError'
      summary: Получить одного пользователя
      tags:
      - Пользователь
    put:
      consumes:
      - application/json
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserDTO'
      - description: ID пользователя
        in: path
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: bool
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ResponseError'
      summary: Обновить
      tags:
      - Пользователь
swagger: "2.0"
